[{"D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\index.js":"1","D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\App.js":"2","D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\components\\Users.js":"3","D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\reportWebVitals.js":"4","D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\Layout.js":"5","D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\components\\Login.js":"6","D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\components\\NavigationBar.js":"7"},{"size":517,"mtime":1607579982253,"results":"8","hashOfConfig":"9"},{"size":1023,"mtime":1607139283937,"results":"10","hashOfConfig":"9"},{"size":10614,"mtime":1607840416188,"results":"11","hashOfConfig":"9"},{"size":375,"mtime":1607579982256,"results":"12","hashOfConfig":"9"},{"size":166,"mtime":1607579982239,"results":"13","hashOfConfig":"9"},{"size":1450,"mtime":1607842030811,"results":"14","hashOfConfig":"9"},{"size":739,"mtime":1607838090143,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ee68hy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\index.js",[],"D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\App.js",[],"D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\components\\Users.js",["31","32"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Container, Table, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon as Fas} from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport 'datatables.net-dt/js/dataTables.dataTables';\r\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\r\nimport $ from 'jquery'; \r\n\r\nconst baseUrl = \"https://javerianawebdevapi.azurewebsites.net/api/users\";\r\n\r\nexport function List()\r\n{\r\n\r\n  const configHeader = {\r\n    headers: {\r\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiYzE2MWUwMi1lNTY2LTQ4N2EtOTExMS0zNjIyZmE0ZGFkOWMiLCJuYW1laWQiOiIyMSIsIm5hbWUiOiJXYWx0ZXIgV2hpdGUiLCJ1c2VybmFtZSI6Ik1yV2hpdGUiLCJlbWFpbCI6Ik1yV2hpdGVAR21haWwuY29tIiwibmJmIjoxNjA3ODE3NTIxLCJleHAiOjE2MDc5MDM5MjEsImlzcyI6ImxvY2FsaG9zdCIsImF1ZCI6ImxvY2FsaG9zdC9hcGkvdXNlcnMifQ.gpu1rk5LTK0d7jchtQqr6bGzuikjImtm6xy19TpdpZ0'\r\n    }\r\n  };\r\n  \r\n  const [ data, setData]=useState([]);  \r\n\r\n  const getUsers=async()=>{\r\n    await axios.get(baseUrl, configHeader)\r\n    .then (response=>{\r\n      setData(response.data);\r\n    }).catch(error=>{\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getUsers();\r\n  },[]);\r\n\r\n  // Control data\r\n  const [currentUser, setCurrentUser]= useState({\r\n    id: '', \r\n    email: '',\r\n    username: '',\r\n    name: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = e => {\r\n    const {name, value}= e.target;\r\n    setCurrentUser({\r\n      ...currentUser,\r\n      [name]: value\r\n    });\r\n  }  \r\n\r\n  // Create \r\n  const [showModalCreate, setShowModalCreate]= useState(false);\r\n  const openCloseModalCreate=()=>{\r\n    setShowModalCreate(!showModalCreate);\r\n  }  \r\n\r\n  const postUser = async() => {\r\n    delete currentUser.id;\r\n    await axios.post(baseUrl, currentUser)\r\n    .then (response=>{\r\n      getUsers();\r\n      openCloseModalCreate();\r\n    }).catch(error=>{\r\n      console.log(error);\r\n    })\r\n  }  \r\n\r\n  // Update\r\n  const [showModalUpdate, setShowModalUpdate]= useState(false);\r\n  const openCloseModalUpdate=()=>{\r\n    setShowModalUpdate(!showModalUpdate);\r\n  }  \r\n\r\n  const selectCurrentUser=(user, action)=>{\r\n    setCurrentUser(user);\r\n    switch (action) {\r\n      case \"Edit\":\r\n        openCloseModalUpdate();\r\n        break;\r\n      case \"Details\":\r\n        openCloseModalDetails();\r\n        break;      \r\n      case \"Delete\":\r\n        openCloseModalDelete();\r\n        break;             \r\n      default:\r\n        break;\r\n    }     \r\n  }\r\n\r\n  const putUser = async() => {\r\n    await axios.put(baseUrl+\"/\"+ currentUser.id, currentUser)\r\n    .then (response=>{\r\n      var result = response.data;\r\n      var updatedData = data;\r\n      updatedData.map(usr=>{\r\n        if(usr.id===currentUser.id){\r\n          usr.email = result.email;\r\n          usr.name = result.name;\r\n          usr.username = result.username;\r\n          usr.password = result.password;\r\n        }\r\n      });\r\n      getUsers();\r\n      openCloseModalUpdate();\r\n    }).catch(error=>{\r\n      console.log(error);\r\n    })\r\n  }  \r\n\r\n  // Details\r\n  const [showModalDetails, setShowModalDetails]= useState(false);\r\n  const openCloseModalDetails=()=>{\r\n    setShowModalDetails(!showModalDetails);\r\n  }\r\n\r\n  // Delete\r\n  const [showModalDelete, setShowModalDelete]= useState(false);\r\n  const openCloseModalDelete=()=>{\r\n    setShowModalDelete(!showModalDelete);\r\n  }  \r\n\r\n  const deleteUser = async() => {\r\n    await axios.delete(baseUrl+\"/\"+ currentUser.id)\r\n    .then (()=>{\r\n      setData(data.filter(usr=>usr.id!==currentUser.id));\r\n      openCloseModalDelete();\r\n    }).catch(error=>{\r\n      console.log(error);\r\n    })\r\n  }    \r\n\r\n  // initialize datatable\r\n  $(document).ready(function () {\r\n    $('#UsersTable').DataTable();\r\n  });\r\n\r\n  return (\r\n    <Container className=\"text-center text-md-left\">\r\n      <h1>User List</h1>\r\n      <p>\r\n        <Button className=\"left\" variant=\"success btn-sm\" onClick={()=>openCloseModalCreate()}> <Fas icon={faPlus} /> New</Button>\r\n      </p>\r\n      <Table id=\"UsersTable\">\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>Email</th>\r\n                <th>Name</th>\r\n                <th>Username</th>\r\n                <th>Password</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n        <tbody>\r\n          {data.map(usr=>(\r\n            <tr key={usr.id}>\r\n              <td>{usr.id}</td>\r\n              <td>{usr.email}</td>\r\n              <td>{usr.name}</td>\r\n              <td>{usr.username}</td>\r\n              <td>**********</td>\r\n              <td>\r\n                <Button variant=\"outline-primary btn-sm\" onClick={()=>selectCurrentUser(usr, \"Edit\")}>Edit</Button> \r\n                <Button variant=\"outline-warning btn-sm\" onClick={()=>selectCurrentUser(usr, \"Details\")}>Details</Button> \r\n                <Button variant=\"outline-danger btn-sm\"  onClick={()=>selectCurrentUser(usr, \"Delete\")}>Delete</Button> \r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      {/* Create */}\r\n      <Modal isOpen={showModalCreate}>\r\n        <ModalHeader>Create User</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Email:</Form.Label>\r\n              <Form.Control type=\"email\" id=\"txtEmail\" name=\"email\" placeholder=\"username@domain.com\" required onChange={handleChange}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control type=\"text\" id=\"txtName\" name=\"name\" placeholder=\"Julio Robles\" required onChange={handleChange}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Username:</Form.Label>\r\n              <Form.Control type=\"text\" id=\"txtUsername\" name=\"username\" placeholder=\"username\" required onChange={handleChange}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password:</Form.Label>\r\n              <Form.Control type=\"password\" id=\"txtPassword\" name=\"password\"  onChange={handleChange}/>\r\n            </Form.Group>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"primary\" onClick={()=>postUser()}>Create</Button>\r\n          <Button variant=\"outline-info\" onClick={()=>openCloseModalCreate()}>Back</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      {/* Update */}\r\n      <Modal isOpen={showModalUpdate}>\r\n      <ModalHeader>Edit User</ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Id:</Form.Label>\r\n            <Form.Control type=\"text\" id=\"txtId\" name=\"id\" readOnly value={currentUser && currentUser.id}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email:</Form.Label>\r\n            <Form.Control type=\"email\" id=\"txtEmail\" name=\"email\" placeholder=\"username@domain.com\" required onChange={handleChange}  value={currentUser && currentUser.email}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label >Name:</Form.Label>\r\n            <Form.Control type=\"text\" id=\"txtName\" name=\"name\" placeholder=\"Julio Robles\" required onChange={handleChange}  value={currentUser && currentUser.name}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Username:</Form.Label>\r\n            <Form.Control type=\"text\" id=\"txtUsername\" name=\"username\" placeholder=\"username\" required onChange={handleChange}  value={currentUser && currentUser.username}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Password:</Form.Label>\r\n            <Form.Control type=\"password\" id=\"txtPassword\" name=\"password\"  onChange={handleChange}  value={currentUser && currentUser.password}/>\r\n          </Form.Group>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button variant=\"primary\" onClick={()=>putUser()}>Save</Button>\r\n        <Button variant=\"outline-info\" onClick={()=>openCloseModalUpdate()}>Back</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n      {/* Details */}\r\n      <Modal isOpen={showModalDetails}>\r\n      <ModalHeader>Details User</ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Id:</Form.Label>\r\n            <Form.Control type=\"text\" id=\"txtId\" name=\"id\" readOnly value={currentUser && currentUser.id}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email:</Form.Label>\r\n            <Form.Control type=\"email\" id=\"txtEmail\" name=\"email\" readOnly value={currentUser && currentUser.email}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control type=\"text\" id=\"txtName\" name=\"name\" readOnly value={currentUser && currentUser.name}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Username:</Form.Label>\r\n            <Form.Control type=\"text\" id=\"txtUsername\" name=\"username\" readOnly value={currentUser && currentUser.username}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Password:</Form.Label>\r\n            <Form.Control type=\"text\" id=\"txtPassword\" name=\"password\" readOnly value={currentUser && currentUser.password}/>\r\n          </Form.Group>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button variant=\"outline-info\" onClick={()=>openCloseModalDetails()}>Back</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n      {/* Delete */}\r\n      <Modal isOpen={showModalDelete}>\r\n        <ModalHeader>Are you sure to delete this user?</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label><b>Id:</b></Form.Label>\r\n              <Form.Label>{currentUser && currentUser.id}</Form.Label><br/>\r\n              <Form.Label><b>Email:</b></Form.Label>\r\n              <Form.Label>{currentUser && currentUser.email}</Form.Label><br/>\r\n              <Form.Label><b>Name:</b></Form.Label>\r\n              <Form.Label>{currentUser && currentUser.name}</Form.Label><br/>\r\n              <Form.Label><b>Username:</b></Form.Label>\r\n              <Form.Label>{currentUser && currentUser.username}</Form.Label><br/>\r\n            </Form.Group>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"danger\" onClick={()=>deleteUser(currentUser.id)}>Delete</Button>\r\n          <Button variant=\"outline-info\" onClick={()=>openCloseModalDelete()}>Back</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n    </Container>\r\n  );\r\n}","D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\reportWebVitals.js",[],"D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\Layout.js",[],"D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\components\\Login.js",[],"D:\\Documents\\My Repositories\\WebDev\\Proyecto\\ReactWeb\\usermanagerapp\\src\\components\\NavigationBar.js",[],{"ruleId":"33","severity":1,"message":"34","line":35,"column":5,"nodeType":"35","endLine":35,"endColumn":7,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":99,"column":26,"nodeType":"39","messageId":"40","endLine":99,"endColumn":28},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["41"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"42","fix":"43"},"Update the dependencies array to be: [getUsers]",{"range":"44","text":"45"},[1334,1336],"[getUsers]"]