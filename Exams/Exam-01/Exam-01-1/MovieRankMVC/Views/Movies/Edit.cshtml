@model MovieRankMVC.Models.Movie

@{
    ViewData["Title"] = "Edit";
}

<style>
    header, footer {
        display: none;
    }

    body {
        background-color: #212529
    }
</style>

<div class="container mt-5 bg-dark">
    <div class="card">
        <div class="card-header bg-dark text-white">
            <h1 class="text-center">Edit Movie</h1>
        </div>
        <div class="card-body bg-warning">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-4">
                            <label asp-for="Poster" class="control-label"></label>
                            <input asp-for="Poster" class="form-control border border-dark p-2 rounded mt-2 bg-dark text-white" />
                            <span asp-validation-for="Poster" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-4">
                            <label asp-for="Id" class="control-label"></label>
                            <input asp-for="Id" class="form-control border border-dark p-2 rounded mt-2 bg-dark text-white" />
                            <span asp-validation-for="Id" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-4">
                            <label asp-for="Title" class="control-label"></label>
                            <input asp-for="Title" class="form-control border border-dark p-2 rounded mt-2 bg-dark text-white" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-4">
                            <label asp-for="Synopsis" class="control-label"></label>
                            <input asp-for="Synopsis" class="form-control border border-dark p-2 rounded mt-2 bg-dark text-white" />
                            <span asp-validation-for="Synopsis" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-4">
                             <label asp-for="Year" class="control-label"></label>
                             <input asp-for="Year" class="form-control border border-dark p-2 rounded mt-2 bg-dark text-white" />
                             <span asp-validation-for="Year" class="text-danger"></span>
                        </div>
                          <div class="form-group mb-4">
                               <label asp-for="Duration" class="control-label"></label>
                               <input asp-for="Duration" class="form-control border border-dark p-2 rounded mt-2 bg-dark text-white" />
                               <span asp-validation-for="Duration" class="text-danger"></span>
                          </div>
                        <div class="form-group mb-4">
                            <label asp-for="Genres" class="control-label"></label>
                            <input asp-for="Genres" class="form-control border border-dark p-2 rounded mt-2 bg-dark text-white" />
                            <span asp-validation-for="Genres" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <input type="submit" value="Accept" class=" btn btn-success d-inline-block ml-2" />
                            <a asp-action="Index" class="btn btn-danger d-inline-block">Cancel</a>
                        </div>
                    </div>
                </div>
            </form>
            <div id="successMessage" class="alert alert-success mt-3" style="display: none;">
                Movie edited successfully!
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const successMessage = document.getElementById('successMessage');

        const form = document.querySelector('form');

        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            const formData = new FormData(form);

            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    successMessage.style.display = 'block';
                    setTimeout(() => {
                        successMessage.style.display = 'none';
                        window.location.href = '@Url.Action("Index", "Movies")';
                    }, 3000); 
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    </script>
}