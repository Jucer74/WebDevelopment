@model BDayReminderMVC.Models.Friend

@{
    ViewData["Title"] = "Details";
}

<<<<<<< HEAD

=======
>>>>>>> 2023-02-2/micreyesc
    <div class="container mt-5 w-100">
    <div class="justify-content-center w-100">
        <form id="registrationForm" class="row g-3 justify-content-center" novalidate>
                <div class="col-md-4">
                <div class=" d-flex align-items-center justify-content-center mb-2">
                        <img id="imagePreview" class="w-100" src="http://localhost:5000/images/Photos/@Model.Photo" alt="Image Preview">
                    </div>
                    <div class="input-group">
<<<<<<< HEAD
                    <input type="text" class="form-control" id="imageInput" name="imageInput" value=@Html.DisplayFor(model => model.Photo) disabled>
=======
                    <input type="text" class="form-control" id="imageInput" name="imageInput" value=@Html.DisplayFor(model => model.Photo)>
>>>>>>> 2023-02-2/micreyesc
                    <button type="button" class="btn btn-outline-secondary" id="uploadBtn" disabled>
                            <i class="bi bi-cloud-upload"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-bold">@Html.DisplayNameFor(model => model.FirstName)</label>
                            <input type="text" class="form-control" id="firstName" value=@Html.DisplayFor(model => model.FirstName) disabled>
                        </div>
                    <div class="col-md-6 mb-3">
                            <label class="form-label fw-bold">@Html.DisplayNameFor(model => model.LastName)</label>
                            <input type="text" class="form-control" id="LastName" value=@Html.DisplayFor(model => model.LastName) disabled>
                        </div>
                    </div>
                    <div class="row">
                    <div class="col-md-6 mb-3">
                            <label for="dateOfBirth" class="form-label"><strong>Date of Birth</strong></label>
<<<<<<< HEAD
                        <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")" disabled>
=======
                            <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")" disabled>
>>>>>>> 2023-02-2/micreyesc
                            <div class="invalid-feedback">
                                Please provide a valid date of birth.
                            </div>
                        </div>

                    <div class="col-md-6 mb-3">
                            <h3 class=""><strong style="font-size: 1.25rem;">Gender</strong></h3>
                            <div class="form-check form-check-inline">
                                <input type="radio" class="form-check-input" name="Sexo" id="radioMale" value="M" @(Model.Gender == 'M' ? "checked" : "") disabled>
                                <label class="form-check-label" for="radioMale">Male</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input type="radio" class="form-check-input" name="Sexo" id="radioFemale" value="F" @(Model.Gender == 'F' ? "checked" : "") disabled>
                                <label class="form-check-label" for="radioFemale">Female</label>
                            </div>
                            <div class="invalid-feedback">
                                Please select a gender.
                            </div>
                        </div>

                    <div class="col-12">
                            <div class="row">
                            <div class="col-4 d-flex">
                                <label for="customRange1" class="form-label fw-bold">Remain Days:</label>
                            </div>

                            <div class="col-6 d-flex">
<<<<<<< HEAD
                                <input type="range" class="form-range me-2" min="0" max="100" value=@ViewData["daysRemainingPercent"] id="Range" disabled>
                            </div>

                            <div class="col-2 d-flex">
                                <input type="text" class="form-control" placeholder="000" value=@ViewData["DaysRemaining"] aria-label="Value" disabled>
=======
                                <input type="range" class="form-range me-2" min="0" max="100" value="0" id="Range">
                            </div>

                            <div class="col-2 d-flex">
                                <input type="text" class="form-control" placeholder="000" aria-label="Value">
>>>>>>> 2023-02-2/micreyesc
                            </div>

                        </div>
                    </div>
<<<<<<< HEAD
                    </div>
                </div>

=======


                    </div>
                </div>
>>>>>>> 2023-02-2/micreyesc
            <div class="row mt-3">
                <div class="col-md-12">
                    <div class="input-group mb-3 align">
                        <label class="form-label fw-bold mx-2">Relations</label>
                        <a class=""> <i class="bi bi-plus-circle-fill" disabled></i></a>
                        <a class="mx-1"> <i class="bi bi-dash-circle-fill " disabled></i> </a>
                        @foreach (var Relation in Model.Relations)
                        {
                            <button class="btn-white rounded mx-1" disabled>@Relation</button>
                        }
                    </div>
                    <div class="d-flex flex-wrap" id="relationList"></div>
                </div>
            </div>
            </form>
        </div>
    </div>

<<<<<<< HEAD
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var diasFaltantes = 0;
        function calcularDiasFaltantes() {
            const fechaInicio = new Date(document.getElementById('dateOfBirth').value);
            const fechaFin = new Date();
            fechaInicio.setFullYear(fechaFin.getFullYear());

            if (fechaFin > fechaInicio) {
                fechaInicio.setFullYear(fechaFin.getFullYear() + 1);
            }

            let diferenciaMilisegundos = fechaInicio - fechaFin;
            diasFaltantes = Math.floor(diferenciaMilisegundos / (1000 * 60 * 60 * 24));

            if (diasFaltantes == 365) {
                diasFaltantes = 0;
            } else {
                diasFaltantes++;
            }
            alert(diasFaltantes);
            const progres = (diasFaltantes * 100) / 365;
            const progressBar = document.getElementById('Range');
            progressBar.value = progres;

            const inputProgress = document.getElementById('days');
            inputProgress.value = diasFaltantes;
        }

        // Cambiar el evento a 'input'
        const calcularInput = document.getElementById('dateOfBirth');
        calcularInput.addEventListener('change', calcularDiasFaltantes);

    });
</script>
=======
    <script>

    function reloadModalContent() {
        var modalContent = document.getElementById('modalContent');
        modalContent.innerHTML = '<p>Nuevo contenido del modal</p>'; // Reemplaza con tu nuevo contenido
    }

    // Evento para recargar el contenido del modal cuando se abre
    $('#myModal').on('show.bs.modal', function () {
        reloadModalContent();
    });

    // Evento para recargar el contenido del modal cuando se hace clic en un botón
    $('#reloadModalButton').on('click', function () {
        reloadModalContent();
    });

    var diasFaltantes = 0;

    function calcularDiasFaltantes() {
        // Obtener las fechas ingresadas por el usuario
        const fechaInicio = new Date(document.getElementById('dateOfBirth').value);
        const fechaFin = new Date();
        // Cambia el año de la fecha que se ingresa por el año actual.
        fechaInicio.setFullYear(fechaFin.getFullYear());

        // Si la fecha de inicio es posterior a la fecha de fin, ajustar el año de la fecha de inicio
        if (fechaFin > fechaInicio) {
            fechaInicio.setFullYear(fechaFin.getFullYear() + 1);
        }

        // Calcular la diferencia en milisegundos entre las dos fechas
        const diferenciaMilisegundos = fechaInicio - fechaFin;

        // Calcular los días faltantes redondeando hacia abajo
        diasFaltantes = Math.floor(diferenciaMilisegundos / (1000 * 60 * 60 * 24));


        if (diasFaltantes == 365) {
            diasFaltantes = 0;
        } else {
            diasFaltantes++;
        }

        // Mostrar el resultado en el DOM
        const resultadoElement = document.getElementById('daysRemaining');
        resultadoElement.textContent = `Faltan ${diasFaltantes} días entre las fechas.`;

        //Accede al atributo style de la barra de progreso y cambia el width dependiendo el porcentaje entregado por la variable progress
        const progres = (diasFaltantes * 100) / 365;
        //Accede al elemento que tiene la la Range desde su ID
        const progressBar = document.getElementById('Range');
        //Le asigna el valor de progres al value
        progressBar.value = progres;

        console.log(progres)

        // Asignar la función al refresh cada vez que se cambie el valor.
        const refresh = document.getElementById('dateOfBirth');
        action

    </script>
>>>>>>> 2023-02-2/micreyesc
